"""Add PostFinance payment integration fields

Revision ID: 2cf5935d183f
Revises: cc5d932d7eed
Create Date: 2025-07-29 12:01:27.766738

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2cf5935d183f'
down_revision = 'cc5d932d7eed'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payment_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=20), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('webhook_data', sa.JSON(), nullable=True),
    sa.Column('transaction_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payment_transaction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_transaction_state'), ['state'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_transaction_transaction_id'), ['transaction_id'], unique=True)

    with op.batch_alter_table('social_auth_code', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('social_auth_code_code_idx'))
        batch_op.drop_index(batch_op.f('social_auth_code_email_idx'))

    op.drop_table('social_auth_code')
    with op.batch_alter_table('social_auth_usersocialauth', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('social_auth_usersocialauth_provider_uid_idx'))
        batch_op.drop_index(batch_op.f('social_auth_usersocialauth_user_id_idx'))

    op.drop_table('social_auth_usersocialauth')
    op.drop_table('social_auth_nonce')
    with op.batch_alter_table('social_auth_partial', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('social_auth_partial_token_idx'))

    op.drop_table('social_auth_partial')
    op.drop_table('social_auth_association')
    with op.batch_alter_table('course_purchase', schema=None) as batch_op:
        batch_op.add_column(sa.Column('postfinance_transaction_id', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('transaction_state', sa.String(length=50), nullable=True))
        batch_op.create_index(batch_op.f('ix_course_purchase_postfinance_transaction_id'), ['postfinance_transaction_id'], unique=False)
        batch_op.drop_column('stripe_payment_intent_id')

    with op.batch_alter_table('lesson_purchase', schema=None) as batch_op:
        batch_op.add_column(sa.Column('postfinance_transaction_id', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('transaction_state', sa.String(length=50), nullable=True))
        batch_op.create_index(batch_op.f('ix_lesson_purchase_postfinance_transaction_id'), ['postfinance_transaction_id'], unique=False)
        batch_op.drop_column('stripe_payment_intent_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lesson_purchase', schema=None) as batch_op:
        batch_op.add_column(sa.Column('stripe_payment_intent_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_lesson_purchase_postfinance_transaction_id'))
        batch_op.drop_column('transaction_state')
        batch_op.drop_column('postfinance_transaction_id')

    with op.batch_alter_table('course_purchase', schema=None) as batch_op:
        batch_op.add_column(sa.Column('stripe_payment_intent_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_course_purchase_postfinance_transaction_id'))
        batch_op.drop_column('transaction_state')
        batch_op.drop_column('postfinance_transaction_id')

    op.create_table('social_auth_association',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('server_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('handle', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('secret', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('issued', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lifetime', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('assoc_type', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('social_auth_association_pkey'))
    )
    op.create_table('social_auth_partial',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('next_step', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('backend', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('data', sa.TEXT(), server_default=sa.text("'{}'::text"), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('social_auth_partial_pkey'))
    )
    with op.batch_alter_table('social_auth_partial', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('social_auth_partial_token_idx'), ['token'], unique=False)

    op.create_table('social_auth_nonce',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('server_url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('salt', sa.VARCHAR(length=65), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('social_auth_nonce_pkey'))
    )
    op.create_table('social_auth_usersocialauth',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('uid', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('extra_data', sa.TEXT(), server_default=sa.text("'{}'::text"), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('modified', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('social_auth_usersocialauth_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('social_auth_usersocialauth_pkey')),
    sa.UniqueConstraint('provider', 'uid', name=op.f('social_auth_usersocialauth_provider_uid_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    with op.batch_alter_table('social_auth_usersocialauth', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('social_auth_usersocialauth_user_id_idx'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('social_auth_usersocialauth_provider_uid_idx'), ['provider', 'uid'], unique=False)

    op.create_table('social_auth_code',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('social_auth_code_pkey'))
    )
    with op.batch_alter_table('social_auth_code', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('social_auth_code_email_idx'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('social_auth_code_code_idx'), ['code'], unique=False)

    with op.batch_alter_table('payment_transaction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_transaction_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_payment_transaction_state'))

    op.drop_table('payment_transaction')
    # ### end Alembic commands ###
